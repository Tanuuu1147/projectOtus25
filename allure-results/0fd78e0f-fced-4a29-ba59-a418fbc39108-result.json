{"name": "test_remove_item_from_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".btn_secondary\"}\n  (Session info: chrome=139.0.7258.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff66f5978d5+2802741]\n\tGetHandleVerifier [0x0x7ff66f2feb70+79568]\n\t(No symbol) [0x0x7ff66f09c0fa]\n\t(No symbol) [0x0x7ff66f0f2a96]\n\t(No symbol) [0x0x7ff66f0f2d4c]\n\t(No symbol) [0x0x7ff66f146017]\n\t(No symbol) [0x0x7ff66f11accf]\n\t(No symbol) [0x0x7ff66f142e24]\n\t(No symbol) [0x0x7ff66f11aa63]\n\t(No symbol) [0x0x7ff66f0e3c91]\n\t(No symbol) [0x0x7ff66f0e4a23]\n\tGetHandleVerifier [0x0x7ff66f5c2ced+2979917]\n\tGetHandleVerifier [0x0x7ff66f5bd0f3+2956371]\n\tGetHandleVerifier [0x0x7ff66f5dacbd+3078173]\n\tGetHandleVerifier [0x0x7ff66f31836e+184014]\n\tGetHandleVerifier [0x0x7ff66f32024f+216495]\n\tGetHandleVerifier [0x0x7ff66f3070c4+113700]\n\tGetHandleVerifier [0x0x7ff66f307279+114137]\n\tGetHandleVerifier [0x0x7ff66f2edf78+10968]\n\tBaseThreadInitThunk [0x0x7ff8384a7374+20]\n\tRtlUserThreadStart [0x0x7ff83873cc91+33]", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d0035f44c7c97a0117be7a3b165ba40\")>\n\n    @pytest.mark.ui\n    @allure.feature(\"UI\")\n    @allure.story(\"Работа с инвентарем\")\n    def test_remove_item_from_cart(browser):\n        from pages.login_page import LoginPage\n        login_page = LoginPage(browser)\n        login_page.open()\n        login_page.login(\"standard_user\", \"secret_sauce\")\n    \n        inventory_page = InventoryPage(browser)\n        inventory_page.add_item_to_cart()\n        inventory_page.add_item_to_cart(1)  # Добавляем второй товар с другим индексом\n>       browser.find_element(By.CLASS_NAME, \"btn_secondary\").click()\n\ntests\\ui\\test_inventory.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:926: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022C7C6053D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff66f2edf78+10968]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff8384a7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ff83873cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\")\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".btn_secondary\"}\nE         (Session info: chrome=139.0.7258.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#nosuchelementexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff66f5978d5+2802741]\nE       \tGetHandleVerifier [0x0x7ff66f2feb70+79568]\nE       \t(No symbol) [0x0x7ff66f09c0fa]\nE       \t(No symbol) [0x0x7ff66f0f2a96]\nE       \t(No symbol) [0x0x7ff66f0f2d4c]\nE       \t(No symbol) [0x0x7ff66f146017]\nE       \t(No symbol) [0x0x7ff66f11accf]\nE       \t(No symbol) [0x0x7ff66f142e24]\nE       \t(No symbol) [0x0x7ff66f11aa63]\nE       \t(No symbol) [0x0x7ff66f0e3c91]\nE       \t(No symbol) [0x0x7ff66f0e4a23]\nE       \tGetHandleVerifier [0x0x7ff66f5c2ced+2979917]\nE       \tGetHandleVerifier [0x0x7ff66f5bd0f3+2956371]\nE       \tGetHandleVerifier [0x0x7ff66f5dacbd+3078173]\nE       \tGetHandleVerifier [0x0x7ff66f31836e+184014]\nE       \tGetHandleVerifier [0x0x7ff66f32024f+216495]\nE       \tGetHandleVerifier [0x0x7ff66f3070c4+113700]\nE       \tGetHandleVerifier [0x0x7ff66f307279+114137]\nE       \tGetHandleVerifier [0x0x7ff66f2edf78+10968]\nE       \tBaseThreadInitThunk [0x0x7ff8384a7374+20]\nE       \tRtlUserThreadStart [0x0x7ff83873cc91+33]\n\n.venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "steps": [{"name": "Открываем страницу Saucedemo", "status": "passed", "attachments": [{"name": "Открыта страница входа", "source": "23504f9e-6a57-4181-add9-8cdae1a33e00-attachment.png", "type": "image/png"}], "start": 1756036814845, "stop": 1756036816439}, {"name": "Выполняем логин: 'standard_user' / 'secret_sauce'", "status": "passed", "steps": [{"name": "Вводим логин: 'standard_user'", "status": "passed", "attachments": [{"name": "Введён логин: standard_user", "source": "0bcd34da-604d-4c2e-9550-7ecf3cc9c98d-attachment.png", "type": "image/png"}], "parameters": [{"name": "username", "value": "'standard_user'"}], "start": 1756036816440, "stop": 1756036817034}, {"name": "Вводим пароль", "status": "passed", "attachments": [{"name": "Введён пароль", "source": "f6ab5903-9f2a-478d-978a-2fa8066f3519-attachment.png", "type": "image/png"}], "parameters": [{"name": "password", "value": "'secret_sauce'"}], "start": 1756036817035, "stop": 1756036817375}, {"name": "Нажимаем кнопку Вход", "status": "passed", "attachments": [{"name": "Клик по кнопке Вход", "source": "eb461f27-a221-4809-9a54-e554a0cc3f6a-attachment.png", "type": "image/png"}], "start": 1756036817375, "stop": 1756036817922}], "parameters": [{"name": "username", "value": "'standard_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1756036816440, "stop": 1756036817922}, {"name": "Добавляем товар в корзину", "status": "passed", "attachments": [{"name": "Товар добавлен в корзину", "source": "86a61868-03f6-47ee-a539-1d7d188089dc-attachment.png", "type": "image/png"}], "parameters": [{"name": "index", "value": "0"}], "start": 1756036817923, "stop": 1756036818294}, {"name": "Добавляем товар в корзину", "status": "passed", "attachments": [{"name": "Товар добавлен в корзину", "source": "381b286c-550f-4141-8f22-fdab8b89fef8-attachment.png", "type": "image/png"}], "parameters": [{"name": "index", "value": "1"}], "start": 1756036818295, "stop": 1756036818637}], "attachments": [{"name": "screenshot-on-failure", "source": "d5a58e0d-0039-42d1-aef2-390ad9781911-attachment.png", "type": "image/png"}], "start": 1756036814844, "stop": 1756036818664, "uuid": "f9e01a81-402d-4462-b6c3-6d5800324353", "historyId": "f7925623b629381e835d32c5101074f5", "testCaseId": "f7925623b629381e835d32c5101074f5", "fullName": "tests.ui.test_inventory#test_remove_item_from_cart", "labels": [{"name": "feature", "value": "UI"}, {"name": "story", "value": "Работа с инвентарем"}, {"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "tests.ui"}, {"name": "suite", "value": "test_inventory"}, {"name": "host", "value": "DESKTOP-MOPQG03"}, {"name": "thread", "value": "3952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui.test_inventory"}], "titlePath": ["tests", "ui", "test_inventory.py"]}